# Find commit hash which contains file throught all branches by regexp
git log --all -- '**/my_file.png'

# Find branches which contains desired commit
git branch --contains {{commit}}

# Bind local branch to remote branch
git branch --set-upstream-to=origin/<branch> alejo/domi-historic/base

# Find out a git banch creator
git for-each-ref --format='%(committerdate) %09 %(authorname) %09 %(refname)' --sort=committerdate | grep '<branch_name>'

# Delete remote branch
 git push origin --delete <remote/branch>

# Rename a branch
git branch -m <old_name> <new_name>

# Log multiple branches # Referencia: https://stackoverflow.com/a/42376337/12004750
git log --branches=<pattern>
git log --branches="[m]aster" --branches="[t]est-model-invoice-information"
git log --branches={"master","develop"} --oneline --graph --color
git log --branches={"[m]aster","[t]est-model-invoice-information"} --oneline --graph --color

# log branches sith prefix-pattern
git log --branches="insurance-renewal/*" --oneline --graph --color

# Move branch pointer to different commit
git checkout branch-name
git reset --hard new-tip-commit

# Move branch pointer to different commit without checkout
git branch --force <branch-name> <new-tip-commit> # OK

# List branches rencently created
git for-each-ref --sort=-committerdate refs/heads/

# Switch to previous branch
git switch -

# Go to previous branch
