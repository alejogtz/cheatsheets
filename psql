# Run a query thar returns a json and store it into file
psql -c "SELECT metadata from workflows where metadata->>'address_for_contract_signature' is not null limit 1" -d prestemos_development --tuples-only -o metadata.json # -t also works

# Run a query using jsonb#>
PGPASSWORD={{password}} psql -h localhost -U ubuntu -d prestemos_development -c \
	"SELECT * FROM CONTRACTS WHERE contracts.params::jsonb#>'{contract,vehicle} IS NOT NULL LIMIT 5"

# Run Command Single Line
psql -h localhost -U postgres -c "CREATE DATABASE microservicios"
psql -h localhost -U postgres -c "<query>"

# Run query from file
psql --expanded -d {{database}} -h {{127.0.0.1}} -U {{postgres}} -p {{port}} -f query.sql
psql --expanded -d prestemos_development -f query.sql

# showing one column per line with column
# man psql => \x
# man psql => --expanded
# man psql => \pset => expanded
psql --expanded -h localhost -U postgres -c "<query>"

# Simple connection to database
psql --host localhost \
     --port 5432 \
     --username ubuntu \
     -d prestemos_development 
     --password



# shortcuts commands
\l  			# listar bases de datos
\d  			# listar tablas de la bd, incluye secuences
\dt 			# lista de tablas de la B.D seleccionada, only relations
\d <table_name>    	# Describe la tabla
\d+ <table_name>  	# Informacion de columnas de la tabla
\c <nombre_db>  	# Usar esa base de datos
\e			# Escribir las consultas en tu editor favorito
\h INSERT 		# ver la ayuda sobre INSERT
\h DROP  		# ver la ayuda de drop 
\dn 			# List All schemas
\df to_char		# Detallar funcion 

# Guarda el resultado de una consulta en un archivo 
\o /.tmp/archivo_salida.sql

# para ver el archivo debe abrirse.
cat /tmp/archivo_salida.sql

# para detener el autoguardado se ejecuta
\o

# información de la conexión actual
\conninfo

# ejecutar consultas (querys) desde un archivo externo.
\i /tmp/test.sql

# Listar informacion de tablas
SELECT *
  FROM information_schema.columns
 WHERE table_schema = 'your_schema'
   AND table_name   = 'your_table'
   ;

# Backup database
pg_dump --host localhost \
	--port 5432 \
	--username postgres \
	--format plain --verbose \
	--file "<abstract_file_path>" \
	--table public.tablename dbname

# Restore database
pg_restore --host localhost \
	--port 5432 \
	--username postgres \
	--dbname "anydb" \
	--table public.tablename \
	-Ft --verbose "/path/filename.backup"

# Execute query commands from file into specifie database in a single transaction (`-1` option)
psql -U username \
	-d database \
	-1 -f your_dump.sql

# TOP 10 most sizes tables
psql -d prestemos_development -c "SELECT table_name,
       pg_size_pretty(total_size)
FROM (
    SELECT table_name,
           pg_total_relation_size(table_name) AS total_size
    FROM information_schema.tables
    WHERE table_schema = 'public'  AS table_sizes)
ORDER BY total_size DESC;"

