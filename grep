# Replace 2nc ocurrence of `:` by empty, useful for grep 
grep -rin '{{regex}}'' | sed 's/:/ /2'


# Find files qhich no matches with pattern
# -L (or --files-without-match) option
grep -rL "foo" <folder>

# Find files which match multiple search patterns at same file
grep -ril '<search>' <path>/<dir> | xargs grep -il '<search_2>'

# Show prefix './' in each line
grepp 'requested-payments' | tr ':' ' ' | awk '{print "./"$0}'

# Find pattern, ignoring binary files and match folders
grep --binary-files=without-match --exclude-dir={node_modules,bin,tmp,log,coverage,db,.git} -rin '<search>'
# grep full options: `-r` for recursive, `-l` to print only names of files containing matches and `-i` to ignore case distinctions
grep -rin -E '<regex>' --exclude-dir={dir1,dir2,dir3} --binary-files=without-match --exclude=<regex_pattern> <path>
grep -rin -E '<regex>' --exclude-dir=node_modules <path>

# simpe search
grep -rin -E '<regex_pattern>' <path>

# Filenames only of the search matching
grep -ri --binary-files=without-match --exclude-dir={node_modules,bin,tpm,log} -l 

# Find in one file and display the filename (with /dev/null)
# https://www.gnu.org/software/findutils/manual/html_node/find_html/grep-regular-expression-syntax.html
grepp -E '(\W|^)payment_plan(\W|$)' app/models/account.rb /dev/null
